{"version":3,"sources":["/./$_lazy_route_resource lazy namespace object","/./src/app/app.component.html","/./src/app/dashboard/dashboard.component.html","/./src/app/app-routing.module.ts","/./src/app/app.component.css","/./src/app/app.component.ts","/./src/app/app.module.ts","/./src/app/core.service.ts","/./src/app/dashboard/dashboard.component.css","/./src/app/dashboard/dashboard.component.ts","/./src/app/models/clients.model.ts","/./src/app/models/scoutMissions.module.ts","/./src/environments/environment.ts","/./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"navbar-fixed\\\">\\n    <nav>\\n        <div class=\\\"nav-wrapper nav-position-header\\\">\\n            <div class=\\\"header\\\">\\n                <!-- <h5>Dashboard</h5> -->\\n                \\n            </div>\\n        </div>\\n    </nav>\\n</div>\\n\\n<ul id=\\\"slide-out\\\" class=\\\"sidenav sidenav-fixed\\\">\\n    <li>\\n        <div class=\\\"user-view\\\">\\n                <img src=\\\"../assets/img/aerobotics_logo_new.svg\\\">\\n        </div>\\n    </li>\\n\\n    <li routerLinkActive=\\\"active\\\"><a class=\\\"waves-effect active center-text\\\" routerLink=\\\"/dashboard\\\">Dashboard</a></li>\\n    <li>\\n        <div class=\\\"divider\\\"></div>\\n    </li>\\n   \\n</ul>\\n\\n\\n<div class=\\\"main\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n            <router-outlet></router-outlet>\\n        </div>\\n    </div>\\n\\n</div>\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col s12\\\">\\n    <button (click)=\\\"selectedScoutMissions($event)\\\" class=\\\"waves-effect waves-light btn\\\">button</button>\\n    <input name=\\\"testt\\\" id=\\\"testt\\\" [(ngModel)]=\\\"testt\\\">\\n    <pre>{{testt | json}}</pre>\\n\\n    {{selectedClient}} jj\\n\\n\\n    <ul class=\\\"tabs\\\">\\n      <li class=\\\"tab col s3\\\"><a href=\\\"#scoutMission\\\" class=\\\"active\\\">Scout Missions</a></li>\\n      <li class=\\\"tab col s3\\\"><a href=\\\"#schedule\\\">Schedule</a></li>\\n    </ul>\\n  </div>\\n  <div id=\\\"scoutMission\\\" class=\\\"col s12\\\">\\n    <div class=\\\"card-panel\\\">\\n      <h5 class=\\\"center-text\\\">Scout Missions</h5>\\n      <table class=\\\"responsive-table striped centered\\\">\\n        <thead>\\n          <tr>\\n            <th>Title</th>\\n            <th>ID </th>\\n            <th>Farm ID</th>\\n            <th>Date</th>\\n            <th>Complete</th>\\n            <th>Allocate Worker</th>\\n\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let scoutMission of scoutMissions\\\">\\n            <td>{{scoutMission.title}}</td>\\n            <td>{{scoutMission.id}}</td>\\n            <td>{{scoutMission.farm_id}}</td>\\n            <td>{{scoutMission.date}}</td>\\n            <td>{{scoutMission.complete}}</td>\\n            <td>\\n\\n              <!-- <div name=\\\"test\\\" class=\\\"input-field col s12\\\">\\n                    <select id=\\\"selectedClient\\\" \\n                     [ngModel]=\\\"selectedClient\\\" (ngModelChange)=\\\"onSelectedClientChange($event)\\\" name=\\\"selectedClient\\\" \\n                     #createSelectedClient=\\\"ngModel\\\">\\n                      <option value=\\\"\\\" disabled selected>Choose your option</option>\\n                      <option *ngFor=\\\"let client of clients\\\" let i=\\\"index\\\" value=\\\"client.id\\\" [value]=\\\"client.id\\\">{{client.name}}</option>\\n                     <label>select</label>\\n                    </select>\\n                  </div> -->\\n\\n              <div name=\\\"test\\\" class=\\\"input-field col s12\\\">\\n                <select [(ngModel)]=\\\"selectedClient\\\" (ngModelChange)=\\\"onSelectedClientChange($event)\\\">\\n                  <!-- <option value=\\\"\\\" disabled selected>Choose your option</option> -->\\n                  <option *ngFor=\\\"let client of clients\\\" let i=\\\"index\\\" [value]=\\\"client.id\\\">\\n                    {{client.name}}{{client.id}}</option>\\n                  <label>select</label>\\n                </select>\\n\\n                <!-- <select id=\\\"selectedClient\\\" #oldvalue=\\\"ngModel\\\" [(ngModel)]=\\\"selectedClient\\\" (ngModelChange)=\\\"onSelectedClientChange(oldvalue)\\\"\\n                  name=\\\"selectedClient\\\" #updateSelectedClient=\\\"ngModel\\\" required>\\n                  <option value=\\\"\\\" disabled selected>Select Client</option>\\n                  <option *ngFor=\\\"let client of clients\\\" let i=index [ngValue]=\\\"client.id\\\" value=\\\"client.id\\\"\\n                    [value]=\\\"client.id\\\">{{client.name}}</option>\\n                </select> -->\\n\\n              </div>\\n\\n\\n\\n\\n            </td>\\n\\n            <td> <button (click)=\\\"selectedScoutMissions(scoutMission.id, selectedClient)\\\"\\n                class=\\\"waves-effect waves-light btn\\\">button</button></td>\\n\\n\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n\\n  </div>\\n  <div id=\\\"schedule\\\" class=\\\"col s12\\\">\\n\\n    <div class=\\\"card-panel\\\">\\n      <h5 class=\\\"center-text\\\">Clients</h5>\\n      <table class=\\\"responsive-table highlight striped centered\\\">\\n        <thead>\\n          <tr>\\n            <th>Name</th>\\n            <th>Email </th>\\n            <th>User ID</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let client of clients\\\">\\n            <td>{{client.name}}</td>\\n            <td>{{client.email}}</td>\\n            <td>{{client.user_id}}</td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n\\n  </div>\\n\\n</div>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {DashboardComponent} from './dashboard/dashboard.component'\n\nimport {CommonModule} from '@angular/common'\n\nconst routes: Routes = [\n  {\n    path: '', redirectTo: 'dashboard', pathMatch: 'full',\n  },\n  {\n    path: 'dashboard', component: DashboardComponent,\n  }\n];\n\n@NgModule({\n  imports: [CommonModule, RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, AfterViewInit } from '@angular/core';\ndeclare let jQuery: any;\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements AfterViewInit {\n  title = 'aeroboticsApp';\n\n  public constructor(){\n\n  }\n\n  ngAfterViewInit(){\n    jQuery(document).ready(function(){\n      // jQuery('#select').formSelect();\n\n\n      jQuery('.dropdown-trigger').dropdown();\n\n    });\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n// import {HttpModule} from '@angular/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport {DashboardComponent} from '../app/dashboard/dashboard.component'\nimport { FormsModule ,ReactiveFormsModule} from '@angular/forms';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule\n    \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { throwError as observableThrowError, of as observableOf, Observable, BehaviorSubject, Subscription } from 'rxjs';\n\nimport { share, catchError, map } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpRequest } from '@angular/common/http';\nimport { environment } from '../environments/environment';\nimport {Clients } from '../app/models/clients.model'\nimport {ScoutMissions} from '../app/models/scoutMissions.module'\n\nimport { debug } from 'util';\n// import { RequestOptions} from 'https';\n\nconst httpOptions ={\n  headers: new HttpHeaders({'Authorization': '1536660107LWZ2JGK17J72HR4O5NU53FBBSLSMRB'})\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\n\nexport class CoreService {\n\n  private observable: Observable<any>;\n  private clients: Clients;\n  private scoutMissions: ScoutMissions;\n  private clientsEndpoint: string;\n  private scoutMissionEndpoint: string;\n  private apiHeader: any;\n\n\n  public handleError(error: any) {\n    if (error instanceof Response) {\n      return observableThrowError(error.json()['error'] || 'API server error');\n    }\n    return observableThrowError(error || 'API server error');\n  }\n\n  constructor(private http: HttpClient) {\n\n    this.clientsEndpoint = 'https://sherlock.aerobotics.io/developers/clients/';\n    this.scoutMissionEndpoint = 'https://sherlock.aerobotics.io/developers/scoutmissions/';\n  }\n\n\n  //Clients Call - get all clients\n\n  getClients() {\n    const url = `${this.clientsEndpoint}`;\n\n    this.observable = this.http.get(url, httpOptions).pipe(\n      map(response => {\n        this.observable = null;\n        this.clients = new Clients(response);\n        return this.clients\n      }),\n      catchError(error => this.handleError(error)),\n      share()\n);\n    return this.observable\n  }\n\n  //Get Scout Missions\n\n  getScoutMissions() {\n    const url = `${this.scoutMissionEndpoint}`;\n\n    this.observable = this.http.get(url, httpOptions).pipe(\n      map(response => {\n        this.observable = null;\n        this.scoutMissions = new ScoutMissions(response);\n        return this.scoutMissions\n      }),\n      catchError(error => this.handleError(error)),\n      share()\n);\n    return this.observable\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { CoreService } from '../core.service';\nimport { Clients } from '../models/clients.model';\nimport { ScoutMissions } from '../models/scoutMissions.module';\nimport { ActivatedRoute, RouterModule, Routes } from '@angular/router';\nimport { HttpClient } from '@angular/common/http'\nimport * as _ from 'underscore';\n\ndeclare let jQuery: any;\ndeclare let M: any;\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  private clients: Clients[] = [];\n  private scoutMissions: ScoutMissions[] = [];\n  testt: string;\n  selectedClient: number;\n  constructor(private coreService: CoreService,\n    private activatedRoute: ActivatedRoute, private _http: HttpClient,\n    private changeDetectorRefs: ChangeDetectorRef) {\n\n    this.setClients();\n    this.setScoutMissions();\n\n    console.log(this.selectedClient)\n\n  }\n\n\n  setClients() {\n    this.clients = [];\n    this.coreService.getClients().subscribe(\n      response => {\n        this.clients = response.data.results;\n        console.log(this.clients);\n\n        setTimeout(function(){\n          jQuery('select').material_select();\n        },200);\n      },\n      err => {\n        console.log('Error fetching clients' + this.clients);\n      }\n    )\n  }\n\n  setScoutMissions() {\n    this.scoutMissions = [];\n    this.coreService.getScoutMissions().subscribe(\n      res => {\n\n        this.scoutMissions = res.data.results;\n        console.log(this.scoutMissions);\n      },\n      err => {\n        console.log('Error fetching Scout Missions' + this.scoutMissions);\n      })\n  }\n\n  onSelectedClientChange(val: any){\n    debugger;\n    // this.selectedClient.push(i);\n    console.log(val);\n  }\n  selectedScoutMissions(missionID, workerID, i){\n    debugger;\n    // this.selectedClient.push(i);\n    console.log(i);\n  }\n\n  ngOnInit() {\n    jQuery(document).ready(function(){\n      jQuery('.tabs').tabs();\n    });\n\n    // this.selectedClient = 26255;\n  }\n}\n","export class Clients{\n    data: Array<any> =[];\n    SystemReference: any;\n    constructor(json){\n        this.data = json;\n    }\n}","export class ScoutMissions{\n    data: Array<any> =[];\n    SystemReference: any;\n    constructor(json){\n        this.data = json;\n    }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}